// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	ctx "github.com/x-xyz/goapi/base/ctx"

	mock "github.com/stretchr/testify/mock"
)

// WebResourceWriterRepository is an autogenerated mock type for the WebResourceWriterRepository type
type WebResourceWriterRepository struct {
	mock.Mock
}

// Store provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *WebResourceWriterRepository) Store(_a0 ctx.Ctx, _a1 string, _a2 []byte, _a3 string) (string, error) {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 string
	if rf, ok := ret.Get(0).(func(ctx.Ctx, string, []byte, string) string); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(ctx.Ctx, string, []byte, string) error); ok {
		r1 = rf(_a0, _a1, _a2, _a3)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewWebResourceWriterRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewWebResourceWriterRepository creates a new instance of WebResourceWriterRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWebResourceWriterRepository(t mockConstructorTestingTNewWebResourceWriterRepository) *WebResourceWriterRepository {
	mock := &WebResourceWriterRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
